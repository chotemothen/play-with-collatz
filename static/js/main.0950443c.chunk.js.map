{"version":3,"sources":["reportWebVitals.js","rickroll-roll.gif","RickRoll.jsx","header.jsx","CollatzGraph.jsx","calculateCollatz.js","PlayContainer.jsx","LeaderBoard.jsx","App.js","routes.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","connection","WebSocket","RickRoll","props","useEffect","onopen","setInterval","send","onerror","error","console","log","onmessage","e","data","setIsRickRolled","isRickRolled","src","rick","alt","Header","className","Tabs","value","tab","onChange","event","newValue","setTab","indicatorColor","textColor","Tab","label","CollatzGraph","useState","graphState","setGraphState","growth","setGrowth","count","setCount","maxNum","setMaxNum","obj","num","dataPoints","nextNumber","i","push","getCollatzObjects","toFixed","setLeaderData","leaderData","name","Paper","LineChart","width","height","margin","top","right","left","bottom","XAxis","dataKey","YAxis","Tooltip","Legend","Line","type","stroke","PlayContainer","goClicked","setGoClicked","Fragment","Typography","variant","TextField","id","setName","target","setNum","Button","classes","root","color","onClick","createData","rows","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","onRequestSort","numSelected","rowCount","TableHead","TableRow","headCell","TableCell","align","padding","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","makeStyles","theme","paddingLeft","spacing","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","useStyles","display","alignItems","justifyContent","paper","table","minWidth","border","clip","overflow","position","EnhancedTable","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","TableContainer","Table","size","checked","newSelecteds","n","TableBody","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","tabIndex","component","scope","style","colSpan","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","parseInt","App","Routes","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0950443c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/rickroll-roll.49db4044.gif\";","import React, {useEffect} from \"react\";\r\n\r\nimport rick from \"./rickroll-roll.gif\";\r\nconst url = 'ws://localhost:8080'\r\nlet connection = new WebSocket(url);;\r\nconst RickRoll = (props) => {\r\n    \r\n    useEffect(() => {\r\n         \r\n        connection.onopen = () => {\r\n            setInterval(() => {connection.send('Message From Client')}, 1000); \r\n          }\r\n          connection.onerror = (error) => {\r\n            console.log(`WebSocket error: ${error}`)\r\n          }\r\n                 \r\n    }, []);\r\n\r\n    connection.onmessage = (e) => {\r\n        console.log(e.data)\r\n         props.setIsRickRolled(e.data !== \"Not Yet\")\r\n      }    \r\n    \r\n    return(\r\n    <>\r\n    {props.isRickRolled &&  <img src={rick} alt=\"loading...\" />}\r\n    </>\r\n)};\r\n\r\nexport default RickRoll;\r\n","import React from \"react\";\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nexport const Header = (props) => {\r\n    const handleChange = (event, newValue) => {\r\n        props.setTab(newValue);\r\n      };\r\n    return (\r\n        <header className=\"App-header\">\r\n        Break Collatz\r\n        <Tabs\r\n            value={props.tab}\r\n            className=\"Tab\"\r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"    \r\n        >\r\n          <Tab label=\"Play\" >  </Tab>\r\n          <Tab label= \"LeaderBoard\" >  </Tab>\r\n          <Tab label= \"Lily\" /> \r\n        </Tabs>\r\n       </header>\r\n    );\r\n}","import { Paper } from \"@material-ui/core\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport { LineChart, XAxis, YAxis, Line, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport { getCollatzObjects } from \"./calculateCollatz\";\r\n\r\n\r\nconst CollatzGraph = (props) => {\r\n    const [graphState, setGraphState] = useState([]);\r\n    const [growth, setGrowth] = useState(\"\");\r\n    const [count, setCount] = useState(\"\");\r\n    const [maxNum, setMaxNum] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const obj = getCollatzObjects(props.num);\r\n        setGraphState(obj.dataPoints);\r\n        setGrowth(obj.growth.toFixed(2));\r\n        setCount(obj.count);\r\n        setMaxNum(obj.maxNum);\r\n        props.setLeaderData([ ...props.leaderData, {\r\n            name: props.name,\r\n            maxNum: obj.maxNum,\r\n            growth: obj.growth.toFixed(2),\r\n            count: obj.count,\r\n            num: props.num\r\n        }]);\r\n    }, []);\r\n\r\n    return (\r\n    <div className=\"CollatzGraph-Container\">\r\n        <Paper className=\"CollatzGraph-Paper\">\r\n            <LineChart width={1200} height={360} data={graphState}\r\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\r\n                <XAxis dataKey=\"count\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\r\n            </LineChart>\r\n        </Paper>\r\n        <div className=\"CollatzGraph-Info-Container\">\r\n        <Paper className=\"CollatzGraph-Info-Paper\">\r\n                <div className=\"CollatzGraph-Info-Paper-Title\">Number Selected</div>\r\n                <div className=\"CollatzGraph-Info-Paper-Body\"> {props.num} </div>\r\n            </Paper>\r\n            <Paper className=\"CollatzGraph-Info-Paper\">\r\n                <div className=\"CollatzGraph-Info-Paper-Title\">No of steps</div>\r\n                <div className=\"CollatzGraph-Info-Paper-Body\"> {count} </div>\r\n            </Paper>\r\n            <Paper className=\"CollatzGraph-Info-Paper\">\r\n                <div className=\"CollatzGraph-Info-Paper-Title\">Growth %</div>\r\n                <div className=\"CollatzGraph-Info-Paper-Body\">{growth}</div>\r\n            </Paper>\r\n            <Paper className=\"CollatzGraph-Info-Paper\">\r\n                <div className=\"CollatzGraph-Info-Paper-Title\">Highest point</div>\r\n                <div className=\"CollatzGraph-Info-Paper-Body\">{maxNum}</div>\r\n            </Paper>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\nexport default CollatzGraph;","export const getCollatzObjects = (num) => {\r\n    const dataPoints = [\r\n        {\r\n            count: \"\",\r\n            value: num\r\n        }\r\n    ];\r\n    let nextNumber = num;\r\n    let maxNum = num;\r\n    let count = 0;\r\n    for (let i = 1; nextNumber !== 1; i++) {\r\n        if (nextNumber % 2 === 0) {\r\n            nextNumber = nextNumber /2;\r\n        } else {\r\n            nextNumber = 3 * nextNumber + 1;\r\n        }\r\n         if (maxNum < nextNumber ){\r\n            maxNum = nextNumber;\r\n         }\r\n        dataPoints.push({\r\n            count: \"\",\r\n            value: nextNumber\r\n        });\r\n        count = i;\r\n    }\r\n    const growth = ( maxNum - num )/ num * 100;\r\n    console.log(dataPoints);\r\n    return { dataPoints, growth, maxNum, count };\r\n\r\n} \r\n\r\n// \r\n// I am part of the team who built and raced in the worlds longest slot car track race (Scalextric)","import React, {useState} from \"react\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button, TextField, Typography } from \"@material-ui/core\";\r\nimport CollatzGraph from \"./CollatzGraph\";\r\nconst PlayContainer = (props) => {\r\n\r\n    const [ goClicked, setGoClicked ] = useState(false);\r\n    return (\r\n        <React.Fragment>\r\n        {!goClicked && <div className=\"PlayContainer-Div\">\r\n        <Paper className=\"PlayContainer-Paper\">\r\n        <Typography className=\"PlayContainer-Subtitle\" variant=\"subtitle2\">Enter your name and your lucky number to win!!</Typography>\r\n        <div className=\"PlayContainer-Div\">\r\n            <TextField \r\n                className=\"PlayContainer-Input\"\r\n                id=\"outlined-name\"\r\n                label=\"Name\"\r\n                variant=\"outlined\"\r\n                value={props.name}\r\n                onChange={(event) => {props.setName(event.target.value)}}\r\n                />\r\n            <TextField\r\n                className=\"PlayContainer-Input\"\r\n                id=\"outlined-number\"\r\n                label=\"Lucky Number\"\r\n                variant=\"outlined\"\r\n                value={props.num}\r\n                onChange={(event) => {props.setNum(event.target.value)}}\r\n            />\r\n        </div>\r\n        <div className=\"PlayContainer-Go-Div\">\r\n            <Button\r\n                classes={{root: \"PlayContainer-Go\"}} \r\n                variant=\"contained\" color=\"primary\"\r\n                onClick={() => {setGoClicked(true)}}\r\n                > GO!! </Button>\r\n        </div>\r\n        </Paper>\r\n        </div>}\r\n        {goClicked && <CollatzGraph \r\n            num={props.num}\r\n            leaderData={props.leaderData}\r\n            setLeaderData={props.setLeaderData}\r\n            name={props.name}\r\n        />}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default PlayContainer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nfunction createData(name, growth, maxNum, count) {\r\n  return { name, growth, maxNum, count };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\r\n  { id: 'number', numeric: true, disablePadding: false, label: 'No Selected' },\r\n  { id: 'growth', numeric: true, disablePadding: false, label: 'Max Growth %' },\r\n  { id: 'maxNum', numeric: true, disablePadding: false, label: 'Max Number' },\r\n  { id: 'count', numeric: true, disablePadding: false, label: 'No of Steps' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  paper: {\r\n    width: 1000,\r\n    margin: 30,\r\n    padding: 20\r\n\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable({leaderData}) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, leaderData.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={leaderData.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(leaderData, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.num}</TableCell>\r\n                      <TableCell align=\"right\">{row.growth}</TableCell>\r\n                      <TableCell align=\"right\">{row.maxNum}</TableCell>\r\n                      <TableCell align=\"right\">{row.count}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={leaderData.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from  \"react\";\r\nimport './App.css';\r\nimport { Header } from \"./header\";\r\nimport PlayContainer  from \"./PlayContainer\";\r\nimport LeaderBoard from \"./LeaderBoard\";\r\n// import Lily from \"./Lily\";\r\n\r\n\r\n\r\nfunction App({isRickRolled, setIsRickRolled}) {\r\n  const [ tab, setTab ] = useState(0);\r\n  const [ name, setName ] = useState(\"\");\r\n  const [ num, setNum ] = useState(\"\");\r\n  const [ leaderData, setLeaderData ] = useState([]);\r\n  return (\r\n    <div>\r\n      <Header tab={tab} setTab={setTab} />\r\n      <div className=\"Main-Container\">\r\n      {tab == 0 && <PlayContainer \r\n        name={name}\r\n        setName={setName}\r\n        num={num}\r\n        setNum={setNum}\r\n        leaderData={leaderData}\r\n        setLeaderData={setLeaderData}\r\n      /> }\r\n      {tab == 1 && <LeaderBoard leaderData={leaderData}  /> }\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, {useState} from \"react\";\r\n\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nimport App from './App';\r\nimport RickRoll from './RickRoll';\r\n\r\nconst Routes = (props) => {\r\n    const [isRickRolled, setIsRickRolled] = useState(false);\r\n    return (  \r\n    <Router>\r\n        <Switch>\r\n            <Route path=\"/play-with-collatz/rickroll\">\r\n                <RickRoll isRickRolled={isRickRolled} setIsRickRolled={setIsRickRolled}/>\r\n            </Route>\r\n            <Route path=\"/play-with-collatz\">\r\n                <App isRickRolled={isRickRolled} setIsRickRolled={setIsRickRolled}/>\r\n            </Route>\r\n        </Switch>\r\n    </Router>    \r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\nimport RickRoll from './RickRoll';\r\nimport Routes from './routes';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Routes />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}